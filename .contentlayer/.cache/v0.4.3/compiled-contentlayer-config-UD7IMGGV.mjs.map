{
  "version": 3,
  "sources": ["../../../src/data/siteMetadata.js", "../../../contentlayer.config.ts"],
  "sourcesContent": ["/** @type {import(\"pliny/config\").PlinyConfig } */\nconst siteMetadata = {\n  title: 'Top Zyknanigans',\n  author: 'Zyk',\n  headerTitle: 'Zykson',\n  description: 'A blog to keep up with my shenanigans',\n  language: 'en-us',\n  theme: 'system', // system, dark or light\n  siteUrl: 'https://tailwind-nextjs-starjter-blog.vercel.app',\n  siteRepo: 'https://github.com/timlrx/tailwind-nextjs-starter-blog',\n  siteLogo: '/static/images/logo.png',\n  socialBanner: '/static/images/twitter-card.png',\n  mastodon: 'https://mastodon.social/@mastodonuser',\n  email: 'address@yoursite.com',\n  github: 'https://github.com',\n  x: 'https://twitter.com/x',\n  // twitter: 'https://twitter.com/Twitter',\n  facebook: 'https://facebook.com',\n  youtube: 'https://youtube.com',\n  linkedin: 'https://www.linkedin.com',\n  threads: 'https://www.threads.net',\n  instagram: 'https://www.instagram.com',\n  locale: 'en-US',\n  analytics: {\n    // If you want to use an analytics provider you have to add it to the\n    // content security policy in the `next.config.js` file.\n    // supports Plausible, Simple Analytics, Umami, Posthog or Google Analytics.\n    umamiAnalytics: {\n      // We use an env variable for this site to avoid other users cloning our analytics ID\n      umamiWebsiteId: process.env.NEXT_UMAMI_ID, // e.g. 123e4567-e89b-12d3-a456-426614174000\n      // You may also need to overwrite the script if you're storing data in the US - ex:\n      // src: 'https://us.umami.is/script.js'\n      // Remember to add 'us.umami.is' in `next.config.js` as a permitted domain for the CSP\n    },\n    // plausibleAnalytics: {\n    //   plausibleDataDomain: '', // e.g. tailwind-nextjs-starter-blog.vercel.app\n    // If you are hosting your own Plausible.\n    //   src: '', // e.g. https://plausible.my-domain.com/js/script.js\n    // },\n    // simpleAnalytics: {},\n    // posthogAnalytics: {\n    //   posthogProjectApiKey: '', // e.g. 123e4567-e89b-12d3-a456-426614174000\n    // },\n    // googleAnalytics: {\n    //   googleAnalyticsId: '', // e.g. G-XXXXXXX\n    // },\n  },\n  newsletter: {\n    // supports mailchimp, buttondown, convertkit, klaviyo, revue, emailoctopus\n    // Please add your .env file and modify it according to your selection\n    provider: 'buttondown',\n  },\n  comments: {\n    // If you want to use an analytics provider you have to add it to the\n    // content security policy in the `next.config.js` file.\n    // Select a provider and use the environment variables associated to it\n    // https://vercel.com/docs/environment-variables\n    provider: 'giscus', // supported providers: giscus, utterances, disqus\n    giscusConfig: {\n      // Visit the link below, and follow the steps in the 'configuration' section\n      // https://giscus.app/\n      repo: process.env.NEXT_PUBLIC_GISCUS_REPO,\n      repositoryId: process.env.NEXT_PUBLIC_GISCUS_REPOSITORY_ID,\n      category: process.env.NEXT_PUBLIC_GISCUS_CATEGORY,\n      categoryId: process.env.NEXT_PUBLIC_GISCUS_CATEGORY_ID,\n      mapping: 'pathname', // supported options: pathname, url, title\n      reactions: '1', // Emoji reactions: 1 = enable / 0 = disable\n      // Send discussion metadata periodically to the parent window: 1 = enable / 0 = disable\n      metadata: '0',\n      // theme example: light, dark, dark_dimmed, dark_high_contrast\n      // transparent_dark, preferred_color_scheme, custom\n      theme: 'light',\n      // theme when dark mode\n      darkTheme: 'transparent_dark',\n      // If the theme option above is set to 'custom`\n      // please provide a link below to your custom theme css file.\n      // example: https://giscus.app/themes/custom_example.css\n      themeURL: '',\n      // This corresponds to the `data-lang=\"en\"` in giscus's configurations\n      lang: 'en',\n    },\n  },\n  search: {\n    provider: 'kbar', // kbar or algolia\n    kbarConfig: {\n      searchDocumentsPath: `${process.env.BASE_PATH || ''}/search.json`, // path to load documents to search\n    },\n    // provider: 'algolia',\n    // algoliaConfig: {\n    //   // The application ID provided by Algolia\n    //   appId: 'R2IYF7ETH7',\n    //   // Public API key: it is safe to commit it\n    //   apiKey: '599cec31baffa4868cae4e79f180729b',\n    //   indexName: 'docsearch',\n    // },\n  },\n};\n\nmodule.exports = siteMetadata;\n", "import {\n  ComputedFields,\n  defineDocumentType,\n  makeSource,\n} from 'contentlayer2/source-files';\nimport { existsSync, readFileSync, writeFileSync } from 'fs';\nimport { slug } from 'github-slugger';\nimport { fromHtmlIsomorphic } from 'hast-util-from-html-isomorphic';\nimport path from 'path';\nimport {\n  extractTocHeadings,\n  remarkCodeTitles,\n  remarkExtractFrontmatter,\n  remarkImgToJsx,\n} from 'pliny/mdx-plugins/index.js';\nimport { allCoreContent, sortPosts } from 'pliny/utils/contentlayer.js';\nimport readingTime from 'reading-time';\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings';\nimport rehypeCitation from 'rehype-citation';\nimport rehypeKatex from 'rehype-katex';\nimport rehypePresetMinify from 'rehype-preset-minify';\nimport rehypePrismPlus from 'rehype-prism-plus';\nimport rehypeSlug from 'rehype-slug';\n// Remark and Rehype packages\nimport remarkGfm from 'remark-gfm';\nimport remarkMath from 'remark-math';\n\nimport siteMetadata from './src/data/siteMetadata';\n\nconst root = process.cwd();\nconst isProduction = process.env.NODE_ENV === 'production';\n\n// Tag colors\nconst tagColorsPath = path.join(root, 'data/tagColors.json');\nconst tagColors = existsSync(tagColorsPath)\n  ? JSON.parse(readFileSync(tagColorsPath, 'utf8'))\n  : {};\n\nconst colors = [\n  'blue',\n  'orange',\n  'green',\n  'pink',\n  'brown',\n  'red',\n  'yellow',\n  'purple',\n  'gray',\n];\n\nconst getRandomColor = () => colors[Math.floor(Math.random() * colors.length)];\n\nconst computedFields: ComputedFields = {\n  readingTime: {\n    type: 'json',\n    resolve: (doc) => readingTime(doc.body.raw),\n  },\n  slug: {\n    type: 'string',\n    resolve: (doc) => doc._raw.flattenedPath.replace(/^.+?(\\/)/, ''),\n  },\n  path: {\n    type: 'string',\n    resolve: (doc) => doc._raw.flattenedPath,\n  },\n  filePath: {\n    type: 'string',\n    resolve: (doc) => doc._raw.sourceFilePath,\n  },\n  toc: {\n    type: 'json',\n    resolve: (doc) => extractTocHeadings(doc.body.raw),\n  },\n  tagColors: {\n    type: 'json',\n    resolve: (doc) => {\n      const newTagColors = {};\n      if (Array.isArray(doc.tags)) {\n        doc.tags.forEach((tag) => {\n          if (!tagColors[tag.name]) {\n            tagColors[tag.name] = tag.color || getRandomColor();\n          }\n          if (!newTagColors[tag.name]) {\n            newTagColors[tag.name] = {\n              name: tag.name,\n              color: tagColors[tag.name],\n              count: 0,\n            };\n          }\n          newTagColors[tag.name].count += 1;\n        });\n        if (Object.keys(newTagColors).length > 0) {\n          writeFileSync(tagColorsPath, JSON.stringify(tagColors, null, 2));\n        }\n        return Object.values(newTagColors);\n      } else {\n        console.error('Tags is not an array:', doc.tags);\n        return [];\n      }\n    },\n  },\n};\n\n/**\n * Count the occurrences of all tags across blog posts and write to json file\n */ function createTagCount(allPosts) {\n  const tagCount: Record<string, number> = {};\n  allPosts.forEach((file) => {\n    if (file.tags && (!isProduction || file.draft !== true)) {\n      file.tags.forEach((tag) => {\n        const formattedTag = slug(tag);\n        if (formattedTag in tagCount) {\n          tagCount[formattedTag] += 1;\n        } else {\n          tagCount[formattedTag] = 1;\n        }\n      });\n    }\n  });\n  writeFileSync('./src/app/tag-data.json', JSON.stringify(tagCount));\n}\n\nfunction createSearchIndex(allPosts) {\n  if (\n    siteMetadata?.search?.provider === 'kbar' &&\n    siteMetadata.search.kbarConfig.searchDocumentsPath\n  ) {\n    writeFileSync(\n      `public/${siteMetadata.search.kbarConfig.searchDocumentsPath}`,\n      JSON.stringify(allCoreContent(sortPosts(allPosts))),\n    );\n    console.log('Local search index generated...');\n  }\n}\n\nexport const Post = defineDocumentType(() => ({\n  name: 'Post',\n  filePathPattern: 'blog/**/*.mdx',\n  contentType: 'mdx',\n  fields: {\n    title: { type: 'string', required: true },\n    date: { type: 'date', required: true },\n    tags: {\n      type: 'list',\n      of: {\n        type: 'json',\n        shape: {\n          name: { type: 'string', required: true },\n          count: { type: 'number', required: true },\n          color: { type: 'string', required: true },\n        },\n      },\n      default: [],\n    },\n    lastmod: { type: 'date' },\n    draft: { type: 'boolean' },\n    summary: { type: 'string' },\n    images: { type: 'json' },\n    authors: { type: 'list', of: { type: 'string' } },\n    layout: { type: 'string' },\n    bibliography: { type: 'string' },\n    canonicalUrl: { type: 'string' },\n    coverImage: { type: 'string' },\n  },\n  computedFields: {\n    ...computedFields,\n    structuredData: {\n      type: 'json',\n      resolve: (doc) => ({\n        '@context': 'https://schema.org',\n        '@type': 'BlogPosting',\n        headline: doc.title,\n        datePublished: doc.date,\n        dateModified: doc.lastmod || doc.date,\n        description: doc.summary,\n        image: doc.coverImage || doc.images?.[0] || siteMetadata.socialBanner,\n        url: `${siteMetadata.siteUrl}/${doc._raw.flattenedPath}`,\n      }),\n    },\n  },\n}));\n\nexport const Authors = defineDocumentType(() => ({\n  name: 'Authors',\n  filePathPattern: 'authors/**/*.mdx',\n  contentType: 'mdx',\n  fields: {\n    name: { type: 'string', required: true },\n    avatar: { type: 'string' },\n    occupation: { type: 'string' },\n    company: { type: 'string' },\n    email: { type: 'string' },\n    twitter: { type: 'string' },\n    linkedin: { type: 'string' },\n    github: { type: 'string' },\n    layout: { type: 'string' },\n  },\n  computedFields,\n}));\n\nexport default makeSource({\n  contentDirPath: 'src/data',\n  documentTypes: [Post, Authors],\n  mdx: {\n    cwd: process.cwd(),\n    remarkPlugins: [\n      remarkExtractFrontmatter,\n      remarkGfm,\n      remarkCodeTitles,\n      remarkMath,\n      remarkImgToJsx,\n    ],\n    rehypePlugins: [\n      rehypeSlug,\n      [\n        rehypeAutolinkHeadings,\n        {\n          behavior: 'prepend',\n          headingProperties: {\n            className: ['content-header'],\n          },\n          content: fromHtmlIsomorphic(\n            `\n            <span class=\"content-header-link\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className=\"w-5 h-5 linkicon\">\n            <path d=\"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z\" />\n            <path d=\"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 1 0 0 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z\" />\n            </svg>\n            </span>\n            `,\n            { fragment: true },\n          ),\n        },\n      ],\n      rehypeKatex,\n      [rehypeCitation, { path: path.join(root, 'data') }],\n      [rehypePrismPlus, { defaultLanguage: 'js', ignoreMissing: true }],\n      rehypePresetMinify,\n    ],\n  },\n  onSuccess: async (importData) => {\n    const { allPosts } = await importData();\n    createTagCount(allPosts);\n    createSearchIndex(allPosts);\n  },\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA,QAAMA,gBAAe;AAAA,MACnB,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,aAAa;AAAA,MACb,aAAa;AAAA,MACb,UAAU;AAAA,MACV,OAAO;AAAA;AAAA,MACP,SAAS;AAAA,MACT,UAAU;AAAA,MACV,UAAU;AAAA,MACV,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,GAAG;AAAA;AAAA,MAEH,UAAU;AAAA,MACV,SAAS;AAAA,MACT,UAAU;AAAA,MACV,SAAS;AAAA,MACT,WAAW;AAAA,MACX,QAAQ;AAAA,MACR,WAAW;AAAA;AAAA;AAAA;AAAA,QAIT,gBAAgB;AAAA;AAAA,UAEd,gBAAgB,QAAQ,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,QAI9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAaF;AAAA,MACA,YAAY;AAAA;AAAA;AAAA,QAGV,UAAU;AAAA,MACZ;AAAA,MACA,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,QAKR,UAAU;AAAA;AAAA,QACV,cAAc;AAAA;AAAA;AAAA,UAGZ,MAAM,QAAQ,IAAI;AAAA,UAClB,cAAc,QAAQ,IAAI;AAAA,UAC1B,UAAU,QAAQ,IAAI;AAAA,UACtB,YAAY,QAAQ,IAAI;AAAA,UACxB,SAAS;AAAA;AAAA,UACT,WAAW;AAAA;AAAA;AAAA,UAEX,UAAU;AAAA;AAAA;AAAA,UAGV,OAAO;AAAA;AAAA,UAEP,WAAW;AAAA;AAAA;AAAA;AAAA,UAIX,UAAU;AAAA;AAAA,UAEV,MAAM;AAAA,QACR;AAAA,MACF;AAAA,MACA,QAAQ;AAAA,QACN,UAAU;AAAA;AAAA,QACV,YAAY;AAAA,UACV,qBAAqB,GAAG,QAAQ,IAAI,aAAa,EAAE;AAAA;AAAA,QACrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASF;AAAA,IACF;AAEA,WAAO,UAAUA;AAAA;AAAA;;;ACvEjB,0BAAyB;AA3BzB;AAAA,EAEE;AAAA,EACA;AAAA,OACK;AACP,SAAS,YAAY,cAAc,qBAAqB;AACxD,SAAS,YAAY;AACrB,SAAS,0BAA0B;AACnC,OAAO,UAAU;AACjB;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACK;AACP,SAAS,gBAAgB,iBAAiB;AAC1C,OAAO,iBAAiB;AACxB,OAAO,4BAA4B;AACnC,OAAO,oBAAoB;AAC3B,OAAO,iBAAiB;AACxB,OAAO,wBAAwB;AAC/B,OAAO,qBAAqB;AAC5B,OAAO,gBAAgB;AAEvB,OAAO,eAAe;AACtB,OAAO,gBAAgB;AAIvB,IAAM,OAAO,QAAQ,IAAI;AACzB,IAAM,eAAe,QAAQ,IAAI,aAAa;AAG9C,IAAM,gBAAgB,KAAK,KAAK,MAAM,qBAAqB;AAC3D,IAAM,YAAY,WAAW,aAAa,IACtC,KAAK,MAAM,aAAa,eAAe,MAAM,CAAC,IAC9C,CAAC;AAEL,IAAM,SAAS;AAAA,EACb;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAEA,IAAM,iBAAiB,MAAM,OAAO,KAAK,MAAM,KAAK,OAAO,IAAI,OAAO,MAAM,CAAC;AAE7E,IAAM,iBAAiC;AAAA,EACrC,aAAa;AAAA,IACX,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,YAAY,IAAI,KAAK,GAAG;AAAA,EAC5C;AAAA,EACA,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,QAAQ,YAAY,EAAE;AAAA,EACjE;AAAA,EACA,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK;AAAA,EAC7B;AAAA,EACA,UAAU;AAAA,IACR,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK;AAAA,EAC7B;AAAA,EACA,KAAK;AAAA,IACH,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,mBAAmB,IAAI,KAAK,GAAG;AAAA,EACnD;AAAA,EACA,WAAW;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ;AAChB,YAAM,eAAe,CAAC;AACtB,UAAI,MAAM,QAAQ,IAAI,IAAI,GAAG;AAC3B,YAAI,KAAK,QAAQ,CAAC,QAAQ;AACxB,cAAI,CAAC,UAAU,IAAI,IAAI,GAAG;AACxB,sBAAU,IAAI,IAAI,IAAI,IAAI,SAAS,eAAe;AAAA,UACpD;AACA,cAAI,CAAC,aAAa,IAAI,IAAI,GAAG;AAC3B,yBAAa,IAAI,IAAI,IAAI;AAAA,cACvB,MAAM,IAAI;AAAA,cACV,OAAO,UAAU,IAAI,IAAI;AAAA,cACzB,OAAO;AAAA,YACT;AAAA,UACF;AACA,uBAAa,IAAI,IAAI,EAAE,SAAS;AAAA,QAClC,CAAC;AACD,YAAI,OAAO,KAAK,YAAY,EAAE,SAAS,GAAG;AACxC,wBAAc,eAAe,KAAK,UAAU,WAAW,MAAM,CAAC,CAAC;AAAA,QACjE;AACA,eAAO,OAAO,OAAO,YAAY;AAAA,MACnC,OAAO;AACL,gBAAQ,MAAM,yBAAyB,IAAI,IAAI;AAC/C,eAAO,CAAC;AAAA,MACV;AAAA,IACF;AAAA,EACF;AACF;AAII,SAAS,eAAe,UAAU;AACpC,QAAM,WAAmC,CAAC;AAC1C,WAAS,QAAQ,CAAC,SAAS;AACzB,QAAI,KAAK,SAAS,CAAC,gBAAgB,KAAK,UAAU,OAAO;AACvD,WAAK,KAAK,QAAQ,CAAC,QAAQ;AACzB,cAAM,eAAe,KAAK,GAAG;AAC7B,YAAI,gBAAgB,UAAU;AAC5B,mBAAS,YAAY,KAAK;AAAA,QAC5B,OAAO;AACL,mBAAS,YAAY,IAAI;AAAA,QAC3B;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF,CAAC;AACD,gBAAc,2BAA2B,KAAK,UAAU,QAAQ,CAAC;AACnE;AAEA,SAAS,kBAAkB,UAAU;AACnC,MACE,oBAAAC,SAAc,QAAQ,aAAa,UACnC,oBAAAA,QAAa,OAAO,WAAW,qBAC/B;AACA;AAAA,MACE,UAAU,oBAAAA,QAAa,OAAO,WAAW,mBAAmB;AAAA,MAC5D,KAAK,UAAU,eAAe,UAAU,QAAQ,CAAC,CAAC;AAAA,IACpD;AACA,YAAQ,IAAI,iCAAiC;AAAA,EAC/C;AACF;AAEO,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,MAAM,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,IACrC,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,IAAI;AAAA,QACF,MAAM;AAAA,QACN,OAAO;AAAA,UACL,MAAM,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,UACvC,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,UACxC,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,QAC1C;AAAA,MACF;AAAA,MACA,SAAS,CAAC;AAAA,IACZ;AAAA,IACA,SAAS,EAAE,MAAM,OAAO;AAAA,IACxB,OAAO,EAAE,MAAM,UAAU;AAAA,IACzB,SAAS,EAAE,MAAM,SAAS;AAAA,IAC1B,QAAQ,EAAE,MAAM,OAAO;AAAA,IACvB,SAAS,EAAE,MAAM,QAAQ,IAAI,EAAE,MAAM,SAAS,EAAE;AAAA,IAChD,QAAQ,EAAE,MAAM,SAAS;AAAA,IACzB,cAAc,EAAE,MAAM,SAAS;AAAA,IAC/B,cAAc,EAAE,MAAM,SAAS;AAAA,IAC/B,YAAY,EAAE,MAAM,SAAS;AAAA,EAC/B;AAAA,EACA,gBAAgB;AAAA,IACd,GAAG;AAAA,IACH,gBAAgB;AAAA,MACd,MAAM;AAAA,MACN,SAAS,CAAC,SAAS;AAAA,QACjB,YAAY;AAAA,QACZ,SAAS;AAAA,QACT,UAAU,IAAI;AAAA,QACd,eAAe,IAAI;AAAA,QACnB,cAAc,IAAI,WAAW,IAAI;AAAA,QACjC,aAAa,IAAI;AAAA,QACjB,OAAO,IAAI,cAAc,IAAI,SAAS,CAAC,KAAK,oBAAAA,QAAa;AAAA,QACzD,KAAK,GAAG,oBAAAA,QAAa,OAAO,IAAI,IAAI,KAAK,aAAa;AAAA,MACxD;AAAA,IACF;AAAA,EACF;AACF,EAAE;AAEK,IAAM,UAAU,mBAAmB,OAAO;AAAA,EAC/C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,MAAM,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACvC,QAAQ,EAAE,MAAM,SAAS;AAAA,IACzB,YAAY,EAAE,MAAM,SAAS;AAAA,IAC7B,SAAS,EAAE,MAAM,SAAS;AAAA,IAC1B,OAAO,EAAE,MAAM,SAAS;AAAA,IACxB,SAAS,EAAE,MAAM,SAAS;AAAA,IAC1B,UAAU,EAAE,MAAM,SAAS;AAAA,IAC3B,QAAQ,EAAE,MAAM,SAAS;AAAA,IACzB,QAAQ,EAAE,MAAM,SAAS;AAAA,EAC3B;AAAA,EACA;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,MAAM,OAAO;AAAA,EAC7B,KAAK;AAAA,IACH,KAAK,QAAQ,IAAI;AAAA,IACjB,eAAe;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,IACA,eAAe;AAAA,MACb;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,UAAU;AAAA,UACV,mBAAmB;AAAA,YACjB,WAAW,CAAC,gBAAgB;AAAA,UAC9B;AAAA,UACA,SAAS;AAAA,YACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAQA,EAAE,UAAU,KAAK;AAAA,UACnB;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,MACA,CAAC,gBAAgB,EAAE,MAAM,KAAK,KAAK,MAAM,MAAM,EAAE,CAAC;AAAA,MAClD,CAAC,iBAAiB,EAAE,iBAAiB,MAAM,eAAe,KAAK,CAAC;AAAA,MAChE;AAAA,IACF;AAAA,EACF;AAAA,EACA,WAAW,OAAO,eAAe;AAC/B,UAAM,EAAE,SAAS,IAAI,MAAM,WAAW;AACtC,mBAAe,QAAQ;AACvB,sBAAkB,QAAQ;AAAA,EAC5B;AACF,CAAC;",
  "names": ["siteMetadata", "siteMetadata"]
}
